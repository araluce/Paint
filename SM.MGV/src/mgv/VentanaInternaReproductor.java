/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mgv;

import java.io.File;
import sm.sound.SMClipPlayer;
import sm.sound.SMPlayer;

/**
 * Reproduce audio
 * @author araluce
 */
public class VentanaInternaReproductor extends javax.swing.JInternalFrame {
    //Variable que contendrá el medio
    SMPlayer player;
    
    /**
     * Constructor de VentanaInternaReproductor
     * Se encarga de reproducir sonidos
     */
    public VentanaInternaReproductor(File f) {
        initComponents();
        player = new SMClipPlayer(f);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton_Play = new javax.swing.JToggleButton();

        setClosable(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameClosed(evt);
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jToggleButton_Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mgv/iconos/PlayPressed_48x48.png"))); // NOI18N
        jToggleButton_Play.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton_PlayActionPerformed(evt);
            }
        });
        getContentPane().add(jToggleButton_Play, new java.awt.GridBagConstraints());

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Botón de dos posiciones:
     *  ---Si presionado: Cambia el icono a stop y reproduce el audio
     *  ---No presionado: Cambia el icono a play y para el audio
     * @param evt 
     */
    private void jToggleButton_PlayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton_PlayActionPerformed
        if(jToggleButton_Play.isSelected()){
            jToggleButton_Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mgv/iconos/StopNormalRed_48x48.png")));
            if(player!=null) player.play();
        }
        else{
            jToggleButton_Play.setIcon(new javax.swing.ImageIcon(getClass().getResource("/mgv/iconos/PlayPressed_48x48.png")));
            if(player!=null) player.stop();
        }
    }//GEN-LAST:event_jToggleButton_PlayActionPerformed

    /**
     * Evento que gestiona el cierre de la ventana
     * @param evt 
     */
    private void formInternalFrameClosed(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameClosed
        if(player!=null) player.stop();
    }//GEN-LAST:event_formInternalFrameClosed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton jToggleButton_Play;
    // End of variables declaration//GEN-END:variables
}
